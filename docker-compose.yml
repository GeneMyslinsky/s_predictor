version: "3.8"

services:
  predictor:
    build: .
    volumes:
        - ./code:/app/code
        - ./storage/predictor:/app/storage
        - ./settings:/root
    ports:
      - "9000:8888"
    env_file:
      - environment
    restart: on-failure
    
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - ./storage/pg:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - environment
    
  zoo1:
    image: zookeeper:3.4.9
    hostname: zook1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./storage/kz/zoo1/data:/data
      - ./storage/kz/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
        KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
        KAFKA_BROKER_ID: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./storage/kz/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1